name: vue-manage-system
git_url: 'git://github.com/sunguide/vue-manage-system.git'
author: sunguide
description: The web management system solution based on Vue2 and Element UI.
tags: []
coverPicture: null
readme: "# manage-system #\r\n基于Vue.js 2.x系列 + Element UI 的后台管理系统解决方案。[线上地址](http://work.omwteam.com/)\r\n\r\n[English document](https://github.com/lin-xin/manage-system/blob/master/README_EN.md)\r\n\r\n## 前言 ##\r\n之前在公司用了Vue + Element组件库做了个后台管理系统，基本很多组件可以直接引用组件库的，但是也有一些需求无法满足。像图片裁剪上传、富文本编辑器、图表等这些在后台管理系统中很常见的功能，就需要引用其他的组件才能完成。从寻找组件，到使用组件的过程中，遇到了很多问题，也积累了宝贵的经验。所以我就把开发这个后台管理系统的经验，总结成这个后台管理系统解决方案。\r\n\r\n该方案作为一套多功能的后台框架模板，适用于绝大部分的后台管理系统（Web Management System）开发。基于vue.js,使用vue-cli脚手架快速生成项目目录，引用Element UI组件库，方便开发快速简洁好看的组件。分离颜色样式，支持手动切换主题色，而且很方便使用自定义主题色。\r\n\r\n## 功能 ##\r\n- [x] Element UI\r\n- [x] 登录/注销\r\n- [x] 表格\r\n- [x] 表单\r\n- [x] 图表 :bar_chart:\r\n- [x] 富文本编辑器\r\n- [x] markdown编辑器\r\n- [x] 图片拖拽/裁剪上传\r\n- [x] 支持切换主题色 :sparkles:\r\n- [x] 列表拖拽排序\r\n\r\n\r\n## 目录结构介绍 ##\r\n\r\n\t|-- build                            // webpack配置文件\r\n\t|-- config                           // 项目打包路径\r\n\t|-- src                              // 源码目录\r\n\t|   |-- components                   // 组件\r\n\t|       |-- common                   // 公共组件\r\n\t|           |-- Header.vue           // 公共头部\r\n\t|           |-- Home.vue           \t // 公共路由入口\r\n\t|           |-- Sidebar.vue          // 公共左边栏\r\n\t|\t\t|-- page                   \t // 主要路由页面\r\n\t|           |-- BaseCharts.vue       // 基础图表\r\n\t|           |-- BaseForm.vue         // 基础表单\r\n\t|           |-- BaseTable.vue        // 基础表格\r\n\t|           |-- Login.vue          \t // 登录\r\n\t|           |-- Markdown.vue         // markdown组件\r\n\t|           |-- Readme.vue           // 自述组件\r\n\t|           |-- Upload.vue           // 图片上传\r\n\t|           |-- VueEditor.vue        // 富文本编辑器\r\n\t|           |-- VueTable.vue         // vue表格组件\r\n\t|   |-- App.vue                      // 页面入口文件\r\n\t|   |-- main.js                      // 程序入口文件，加载各种公共组件\r\n\t|-- .babelrc                         // ES6语法编译配置\r\n\t|-- .editorconfig                    // 代码编写规格\r\n\t|-- .gitignore                       // 忽略的文件\r\n\t|-- index.html                       // 入口html文件\r\n\t|-- package.json                     // 项目及工具的依赖配置文件\r\n\t|-- README.md                        // 说明\r\n\r\n\r\n## 安装步骤 ##\r\n\r\n\tgit clone https://github.com/lin-xin/manage-system.git      // 把模板下载到本地\r\n\tcd manage-system    // 进入模板目录\r\n\tnpm install         // 安装项目依赖，等待安装完成之后\r\n\r\n## 本地开发 ##\r\n\r\n\t// 开启服务器，浏览器访问 http://localhost:8080\r\n\tnpm run dev\r\n\r\n## 构建生产 ##\r\n\r\n\t// 执行构建命令，生成的dist文件夹放在服务器下即可访问\r\n\tnpm run build\r\n\r\n## 组件使用说明与演示 ##\r\n\r\n### vue-schart ###\r\nvue.js封装sChart.js的图表组件。访问地址：[vue-schart](https://github.com/linxin/vue-schart)\r\n<p><a href=\"https://www.npmjs.com/package/vue-schart\"><img src=\"https://img.shields.io/npm/dm/vue-schart.svg\" alt=\"Downloads\"></a></p>\r\n\r\n```JavaScript\r\n<template>\r\n    <div>\r\n        <schart :canvasId=\"canvasId\"\r\n\t\t\t\t:type=\"type\"\r\n\t\t\t\t:width=\"width\"\r\n\t\t\t\t:height=\"height\"\r\n\t\t\t\t:data=\"data\"\r\n\t\t\t\t:options=\"options\"\r\n\t\t></schart>\r\n    </div>\r\n</template>\r\n\t\r\n<script>\r\n    import Schart from 'vue-schart';        // 导入Schart组件\r\n    export default {\r\n        data: function(){\r\n            return {\r\n                canvasId: 'myCanvas',       // canvas的id\r\n                type: 'bar',                // 图表类型\r\n                width: 500,\r\n                height: 400,\r\n                data: [\r\n                    {name: '2014', value: 1342},\r\n                    {name: '2015', value: 2123},\r\n                    {name: '2016', value: 1654},\r\n                    {name: '2017', value: 1795},\r\n                ],\r\n                options: {                  // 图表可选参数\r\n                    title: 'Total sales of stores in recent years'\r\n                }\r\n            }\r\n        },\r\n        components: {\r\n            Schart\r\n        }\r\n    }\r\n</script>\r\n```\r\n\r\n### element-ui ###\r\n一套基于vue.js2.0的桌面组件库。访问地址：[element](http://element.eleme.io/#/zh-CN/component/layout)\r\n\r\n### vue-datasource ###\r\n一个用于动态创建表格的vue.js服务端组件。访问地址：[vue-datasource](https://github.com/coderdiaz/vue-datasource)\r\n\r\n\r\n\r\n### Vue-Quill-Editor ###\r\n基于Quill、适用于Vue2的富文本编辑器。访问地址：[vue-quill-editor](https://github.com/surmon-china/vue-quill-editor)\r\n\r\n### Vue-SimpleMDE ###\r\nVue.js的Markdown Editor组件。访问地址：[Vue-SimpleMDE](https://github.com/F-loat/vue-simplemde)\r\n\r\n\r\n\r\n### Vue-Core-Image-Upload ###\r\n一款轻量级的vue上传插件，支持裁剪。访问地址：[Vue-Core-Image-Upload](https://github.com/Vanthink-UED/vue-core-image-upload)\r\n\r\n\r\n\r\n\r\n## 其他注意事项 ##\r\n### 一、如果我不想用到上面的某些组件呢，那我怎么在模板中删除掉不影响到其他功能呢？ ###\r\n\r\n举个栗子，我不想用 vue-datasource 这个组件，那我需要分四步走。\r\n\r\n第一步：删除该组件的路由，在目录 src/router/index.js 中，找到引入改组件的路由，删除下面这段代码。\r\n\r\n```JavaScript\r\n{\r\n    path: '/vuetable',\r\n    component: resolve => require(['../components/page/VueTable.vue'], resolve)     // vue-datasource组件\r\n},\r\n```\r\n\r\n第二步：删除引入该组件的文件。在目录 src/components/page/ 删除 VueTable.vue 文件。\r\n\r\n第三步：删除该页面的入口。在目录 src/components/common/Sidebar.vue 中，找到该入口，删除下面这段代码。\r\n\t\r\n```HTML\r\n<el-menu-item index=\"vuetable\">Vue表格组件</el-menu-item>\r\n```\r\n\r\n第四步：卸载该组件。执行以下命令：\r\n\t\r\n\tnpm un vue-datasource -S\r\n\r\n完成。\r\n\r\n### 二、如何切换主题色呢？ ###\r\n\r\n第一步：打开 src/main.js 文件，找到引入 element 样式的地方，换成浅绿色主题。\r\n\r\n```javascript\r\nimport 'element-ui/lib/theme-default/index.css';    // 默认主题\r\n// import '../static/css/theme-green/index.css';       // 浅绿色主题\r\n```\r\n\r\n第二步：打开 src/App.vue 文件，找到 style 标签引入样式的地方，切换成浅绿色主题。\r\n\r\n```javascript\r\n@import \"../static/css/main.css\";\r\n@import \"../static/css/color-dark.css\";     /*深色主题*/\r\n/*@import \"../static/css/theme-green/color-green.css\";   !*浅绿色主题*!*/\r\n```\r\n\r\n第三步：打开 src/components/common/Sidebar.vue 文件，找到 el-menu 标签，把 theme=\"dark\" 去掉即可。\r\n\r\n## 项目截图 ##\r\n### 默认皮肤 ###\r\n\r\n![Image text](https://github.com/lin-xin/manage-system/raw/master/screenshots/wms1.png)\r\n\r\n### 浅绿色皮肤 ###\r\n\r\n![Image text](https://github.com/lin-xin/manage-system/raw/master/screenshots/wms2.png)"
deployedAt: 2017-06-25T13:49:12.542Z
