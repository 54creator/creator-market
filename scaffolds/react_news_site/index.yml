name: react_news_site
git_url: 'git://github.com/cjxmg/react_news_site.git'
author: cjxmg
description: 基于react+webpack+es6构建的一个单页面新闻站点
tags:
  - news
coverPicture: null
readme: "# React-news\n![im-js-logo](./doc/img/react-logo.jpg)\n\n>一个基于 React + Webpack + es6 + Babel + ant-design 的新闻站点  \n\n项目主页 [Github-react_news_site](https://github.com/cjxmg/react_news_site)\n\n演示地址 [ReactNews](http://superxmg.website/project/react_news_site/)\n\n## 写在前面\n之前自学过前端自动化工具和angular，但一直没有搭建过一个完整的项目，于是这次认真的做了个基于react新闻网站，自动化工具采用webpack，由于使用了es6的语法，需要用到Babel，Babel是一个广泛使用的转码器，可以将ES6代码转为ES5代码。\n\n此项目是根据慕课网教程仿制的，通过此项目也确实学到了很多东西，现在分享出来，也算是我的一个学习总结，[完整的视频教程链接](http://pan.baidu.com/s/1nuVL3hJ)\n\n觉得好的同学可以给个**star**，万分感谢~ (✪ω✪)\n\n## 效果图\n适配了移动端，pc端直接打开上面的链接\n\n移动端 预览  |  直接扫码打开网页\n:-:|:-:\n![ios-demo.gif](./doc/img/mobile_show.png) | ![安卓下载二维码](./doc/img/qrcode.png)\n\n## 运行项目\n\n**安装依赖**  \n```shell\nnpm install\n```\n**进入开发模式**\n```shell\nnpm run dev\n// or\nwebpack-dev-server --inline --hot\n// 之后打开 localhost:8080 查看\n```\n如果还没安装node的同学，可把 index.html 里的 script 改成下面的形式，然后直接打开`index.html`即可\n![index](./doc/img/index.png)\n\n\n## [webpack](http://webpack.github.io/docs/)配置\n\n> webpack是一款模块加载器兼打包 工具，它能把各种资源，例如JS（含JSX）、coffee、样式（含less/sass）、图片等都作为模块来使用和处理。\n\n react的组件功能很好用，在一个项目中，有些组件可能由不同的人所开发，所以时常需要引入其他的脚本文件，虽然可以用命名空间的办法来解决，但最后在html页面中通过script标签引入各类组件和文件时，还是会显着异常混乱，各模块之间的依赖，先后加载顺序都得人为控制，会极大的降低开发效率，而且项目中用到了es6的语法，需要用到babel来进行es6的转化，所以选择了webpack来进行前端自动化的管理\n\n webpack配置文件：webpack.config.js\n\n ```javascript\n module.exports = {\n   entry: __dirname + '/src/js/root.js',\n   output: {\n     path: __dirname + '/src/',\n     filename: 'bundle.js'\n   },\n   module: {\n     loaders: [\n       {\n         test: /\\.js?$/,\n         exclude: /node_modules/,\n         loader: 'babel-loader',\n         query: {\n           presets: ['react', 'es2015 '], //设定babel的转码规则\n           \"plugins\": [\n             [\"import\", { libraryName: \"antd\", \"style\": \"css\" }] // `style: true` 会加载 less 文件\n           ]\n         }\n       },\n       {\n         test: /\\.css$/,\n         loader: 'style!css-loader'\n       }\n     ]\n   }\n }\n ```\n当运行`webpack`命令时会自动把文件打包在./src目录下\n\n\n## [ANT DESIGN](https://ant.design/index-cn)\n\n![ANT DESIGN](./doc/img/antd.png)\n\n> 一个 UI 设计框架，采用 React 封装的一套 Ant Design 的组件库，比较好用，可快速构建一个样式丰富的站点\n\nantd的组件使用十分方便，官方文档也比较详细\n```javascript\nimport 'antd/dist/antd.css';  // or 'antd/dist/antd.less'\nimport { DatePicker } from 'antd';\nReactDOM.render(<DatePicker />, mountNode);  //也可传入参数\n```\n如果只需要用到其中的几个组件，则引入全部antd的样式则会显得多余，官方文档推荐了一个package： `babel-plugin-import`，配置使用后只需引入组件就行，不用理会样式，`babel-plugin-import`会自动按需加载需要的样式，而忽略那些多余的样式\n```javascript\n// babel-plugin-import 会帮助你加载 JS 和 CSS\nimport { DatePicker } from 'antd';\n```\n## React + Es6\n> 用es6的语法写react组件会有一些不同，比如。。\n\n#### 组件的定义\n* es5语法：\n  ```javascript\n  var Component = React.createClass({\n    render: function() {\n      return <h1>Hello World</h1>;\n    }\n  });\n  ```\n\n* es6语法：\n  ```javascript\n  class Component extends React.Component {\n    render() {\n      return (\n        <h1>Hello World</h1>\n      );\n    }\n  };\n  ```\n\n#### 定义组件的state属性\n* es5语法：\n  ```javascript\n  var Component = React.createClass({\n    getInitialState: function() {\n      return {text: 'World'};\n    },\n    render: function() {\n      return <h1>Hello {this.state.text}</h1>;\n    }\n  });\n  ```\n* es6语法：\n  ```javascript\n  class Component extends React.Component {\n    constructor() {\n      super(); //子类没有自己的this对象，而是继承父类的this对象，然后对其进行加工。如果不调用super方法，子类就得不到this对象。\n  \tthis.state = {text: 'World'};\n    }\n    render() {\n      return (\n        <h1>Hello {this.state.text}</h1>\n      );\n    }\n  };\n  ```\n#### 组件事件处理函数的this差异\n* es5语法：\n  ```javascript\n  var Component = React.createClass({\n    getInitialState: function() {\n      return {text: 'World'};\n    },\n    handleClick: function() {\n      this.setState({text: 'React'});\n    },\n    render: function() {\n      return <h1 onClick={this.handleClick}>Hello {this.state.text}</h1>;\n    }\n  });\n  ```\n  用es5写法时，在事件处理函数handleClick中，this指向的是组件本身，所以this有setState方法。\n\n* es6语法：\n  ```javascript\n  class Component extends React.Component {\n    constructor() {\n      super(); //子类没有自己的this对象，而是继承父类的this对象，然后对其进行加工。如果不调用super方法，子类就得不到this对象。\n  \tthis.state = {text: 'World'};\n    }\n\n    handleClick() {\n      this.setState({text: 'React'});\n    }\n\n    render() {\n      return (\n        <h1 onClick={this.handleClick.bind(this)}>Hello {this.state.text}</h1>\n      );\n    }\n  };\n  ```\n  使用es6语法时，如果绑定事件时直接用`<h1 onClick={this.handleClick}>`,则函数handleClick里的this为`null`,调用`this.setState`方法时会报错，所以需改为`<h1 onClick={this.handleClick.bind(this)}>`,用当前组件对象替换之前的`null`，成为新的this\n\n\n\n## 一些相关链接\n* [HTML to JSX Compiler](http://magic.reactjs.net/htmltojsx.htm) ：可将html代码转换成jsx形式\n\n* [ANT DESIGN - 一个ui设计语言](https://ant.design/index-cn)\n\n* [React 中文文档](https://tianxiangbing.github.io/react-cn/docs/getting-started.html)\n\n* [webpack 2.2 中文文档](http://www.css88.com/doc/webpack2/)\n\n* [前端编码规范](https://giscafer.gitbooks.io/front-end-manual/content/) ：算是比较详细的，包含编码规范和优化等\n\n* [阮一峰的react入门](http://www.ruanyifeng.com/blog/2015/03/react.html) ：简单易懂，配套demo，适合初学者入门\n\n* [阮一峰的es6入门](http://es6.ruanyifeng.com/)\n\n* [入门Webpack，看这篇就够了](http://www.jianshu.com/p/42e11515c10f#) ：写的很不错，逐级深入，有点长，耐心看完\n\n## 后记\n总结了项目中遇到的一些问题和用到的东西，前端这条路还很长，我也会不断的学习更多新知识，如果有写的不对，不好的地方，虚心接受大家的指点~\n"
deployedAt: 2017-06-10T08:09:18.784Z
